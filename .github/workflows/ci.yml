name: Test

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  docker:
    timeout-minutes: 10
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-18.04]
        node-verion: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Start containers
        run: |
          docker-compose -f "docker-compose.yml" up -d
          echo "Waiting for 30s..."
          sleep 30
          docker-compose logs
          echo "Containers ready."

      # Setup node with specific version
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Receive yarn cached dependencies
        uses: actions/cache@v2.1.3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --prefer-offline

      - name: Run lint, build, and test
        run: |
          yarn lint
          yarn build
          yarn test --detectOpenHandles

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
